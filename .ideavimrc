let mapleader = ',' 
let g:mapleader = ','

set ignorecase

set visualbell
set noerrorbells
set relativenumber
set number
"get out of edit mode
imap jk <esc>
imap kj <esc>
nmap ; :
"""""""""""""""
"Faster editing
"""""""""""""""
"change word case
nmap <Leader>c viw~ 
"replace line
nmap <Leader>rl pk"_dd
"replace word
nmap <Leader>rw "_diwP
"replace selected 
vmap <Leader>rw "_dP
"paste register 0
nmap <Leader>p "0p
nmap <Leader>P "0P


"intellij short cuts
nmap <Leader>f :action ReformatCode<CR>
nmap <Leader>rr :action Rerun<CR>
nmap <Leader>b :action JumpToLastChange<CR>
nmap <Leader>rc :action CompileDirty<CR>
nmap <Leader>rf :action CompileFile<CR>
nmap <Leader>j :action InsertLiveTemplate<CR>
nmap <Leader>k :action CheckinProject<CR>
nmap <Leader>iv :action IntroduceVariable<CR>
nmap <Leader>ip :action IntroduceParameter<CR>
nmap <Space>n :action NewClass<CR>
nmap ] :action VimMotionScrollPageDown <CR>
nmap [ :action VimMotionScrollPageUp <CR>
nmap <Space>vs :source ~/.ideavimrc<CR>
nmap <Space>b :action Git.Branches <CR>
nmap <Space>b :action Git.Branches <CR>
" nmap <Space>/ :action AceTargetAction<CR>
" nmap <Leader><Leader>w :action AceAction<CR>
" nmap <Leader><Leader>b :action AceAction<CR>
" nmap <Leader><Leader>ge :action AceAction<CR>
" nmap <Leader><Leader>e :action AceAction<CR>
" nmap <Leader><Leader>w :action emacsIDEAs.AceJumpWord<CR>
" nmap <Leader><Leader>c :action emacsIDEAs.AceJump<CR>
nmap <Space>r :action RenameElement<CR>
nmap <leader><leader>s :action KJumpAction<cr>
nmap <leader><leader>w :action KJumpAction.Word0<cr>
nmap <leader><leader>l :action KJumpAction.Line<cr>

set surround
